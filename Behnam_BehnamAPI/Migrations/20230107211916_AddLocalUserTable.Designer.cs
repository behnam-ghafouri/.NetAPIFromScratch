// <auto-generated />
using System;
using Behnam_BehnamAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BehnamBehnamAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230107211916_AddLocalUserTable")]
    partial class AddLocalUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Behnam_BehnamAPI.Model.Duty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sqft")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Duties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 1, 8, 16, 19, 16, 324, DateTimeKind.Local).AddTicks(7521),
                            ImageUrl = "https://something",
                            Name = "test1",
                            Rate = "5",
                            Sqft = 100
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 1, 9, 16, 19, 16, 324, DateTimeKind.Local).AddTicks(7571),
                            ImageUrl = "https://something",
                            Name = "test2",
                            Rate = "5",
                            Sqft = 100
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 1, 10, 16, 19, 16, 324, DateTimeKind.Local).AddTicks(7574),
                            ImageUrl = "https://something",
                            Name = "test3",
                            Rate = "5",
                            Sqft = 100
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 1, 11, 16, 19, 16, 324, DateTimeKind.Local).AddTicks(7577),
                            ImageUrl = "https://something",
                            Name = "test4",
                            Rate = "5",
                            Sqft = 100
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 1, 12, 16, 19, 16, 324, DateTimeKind.Local).AddTicks(7579),
                            ImageUrl = "https://something",
                            Name = "test5",
                            Rate = "5",
                            Sqft = 100
                        });
                });

            modelBuilder.Entity("Behnam_BehnamAPI.Model.DutyNumber", b =>
                {
                    b.Property<int>("DutyNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DutyId")
                        .HasColumnType("int");

                    b.Property<string>("SpecialDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DutyNo");

                    b.HasIndex("DutyId");

                    b.ToTable("DutyNumbers");
                });

            modelBuilder.Entity("Behnam_BehnamAPI.Models.LocalUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalUsers");
                });

            modelBuilder.Entity("Behnam_BehnamAPI.Model.DutyNumber", b =>
                {
                    b.HasOne("Behnam_BehnamAPI.Model.Duty", "Duty")
                        .WithMany()
                        .HasForeignKey("DutyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duty");
                });
#pragma warning restore 612, 618
        }
    }
}
